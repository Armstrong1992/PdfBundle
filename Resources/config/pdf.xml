<?xml version="1.0" encoding="UTF-8"?>
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

	<parameters>
		<parameter key="ps_pdf.enhancements_file">null</parameter>
		<parameter key="ps_pdf.fonts_file">null</parameter>
		<parameter key="ps_pdf.cache.type">File</parameter>
		<parameter key="ps_pdf.cache.options" type="collection">
			<parameter key="cache_dir">%kernel.cache_dir%</parameter>
		</parameter>
		<parameter key="ps_pdf.use_cache_in_stylesheet">true</parameter>
		<parameter key="ps_pdf.markdown_stylesheet_filepath">null</parameter>
		<parameter key="ps_pdf.markdown_document_template_filepath">null</parameter>
		<parameter key="ps_pdf.document_parser_type">xml</parameter>
	</parameters>

    <services>
    	<service id="ps_pdf.facade" class="PHPPdf\Parser\Facade" factory-service="ps_pdf.facade_builder" factory-method="build" />
    	
    	<service id="ps_pdf.facade_builder" class="PHPPdf\Parser\FacadeBuilder" factory-class="PHPPdf\Parser\FacadeBuilder" factory-method="create">
    		<argument type="service">
		    	<service class="PHPPdf\Configuration\DependencyInjection\LoaderImpl">
		    		<argument type="service" id="service_container" />
		    		<argument>%ps_pdf.enhancements_file%</argument>
		    		<argument>%ps_pdf.fonts_file%</argument>
		    	</service>
    		</argument>
    		<call method="setCache">
    			<argument>%ps_pdf.cache.type%</argument>
    			<argument type="collection">%ps_pdf.cache.options%</argument>
    		</call>
    		<call method="setUseCacheForStylesheetConstraint">
    			<argument>%ps_pdf.use_cache_in_stylesheet%</argument>
    		</call>
    		<call method="setMarkdownStylesheetFilepath">
    			<argument>%ps_pdf.markdown_stylesheet_filepath%</argument>
    		</call>
    		<call method="setMarkdownDocumentTemplateFilepath">
    			<argument>%ps_pdf.markdown_document_template_filepath%</argument>
    		</call>
    		<call method="setDocumentParserType">
    			<argument>%ps_pdf.document_parser_type%</argument>
    		</call>
    	</service>
    	
    	<service id="ps_pdf.listener" class="Ps\PdfBundle\EventListener\PdfListener">
    		<tag name="kernel.event_listener" event="kernel.controller" method="onKernelController" priority="-300" />
    		<tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="-300" />
    		<tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" />
    		<argument id="ps_pdf.facade_builder" type="service" />
    		<argument id="annotation_reader" type="service" />
    		<argument id="ps_pdf.reflection_factory" type="service" />
    		<argument id="templating" type="service" />
    	</service>
    	
    	<service id="ps_pdf.reflection_factory" class="Ps\PdfBundle\Reflection\Factory" public="false" />
    </services>
</container>